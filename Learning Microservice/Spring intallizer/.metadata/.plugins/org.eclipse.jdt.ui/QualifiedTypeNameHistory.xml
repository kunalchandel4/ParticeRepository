<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.micro.Entity.Rating"/>
    <fullyQualifiedTypeName name="org.springframework.web.service.annotation.PatchExchange"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.config.EnableWebFlux"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.server.SecurityWebFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.integration.IntegrationProperties.RSocket.Server"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.web.server.ServerHttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="ch.qos.logback.classic.Logger"/>
    <fullyQualifiedTypeName name="org.hibernate.validator.internal.util.logging.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.apiGateWay.outhController.aouthController"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="com.apiGateWay.outhController.AouthController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="java.text.Collator"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizedClient"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.annotation.AuthenticationPrincipal"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.oidc.user.OidcUser"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.ui.Model"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="java.beans.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="feign.RequestInterceptor"/>
    <fullyQualifiedTypeName name="org.hibernate.annotations.Comment"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.AuthorizedClientServiceOAuth2AuthorizedClientManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.web.DefaultReactiveOAuth2AuthorizedClientManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.web.DefaultOAuth2AuthorizedClientManager"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.http.client.ClientHttpResponse"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.client.OAuth2AuthorizeRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="com.nimbusds.oauth2.sdk.auth.ClientAuthenticationMethod"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.oauth2.client.CommonOAuth2Provider"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.ClientAuthenticationMethod"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
</qualifiedTypeNameHistroy>
